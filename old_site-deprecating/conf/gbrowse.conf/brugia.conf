[GENERAL]
description   = Brugia malayi (current release)
db_adaptor    = Bio::DB::SeqFeature::Store
db_args       = -adaptor DBI::mysql
                -dsn     brugia

plugins     = GFFDumper FastaDumper BatchDumper PrimerDesigner

quicklink plugins = GFFDumper FastaDumper

# routines to compile in advance
init_code = use lib '/usr/local/wormbase/cgi-perl/lib';
        use Ace;
        use ElegansSubs;

head   = <script> var doAutocomplete; </script>

header = sub {
        require ElegansSubs;
        require CGI;
        $Ace::Browser::AceSubs::TOP = 0;
        return ElegansSubs::Banner() .
        '
        <table width=100% style="background-color:gainsboro;border:1px solid blue">
         <tr valign=top>
          <td width=15%> <img src="/images/bm_micro.jpg" width=120> </td>
          <td style="padding-left:20%"> 
	   <h2><i>Brugia malayi</i> Genome Browser</h2>
            Data from <a href="http://www.tigr.org/tdb/e2k1/bma1/"><i>B. malayi</i> Genome Project</a>
	    at TIGR</td>
         <tr>                                        
         </table>';
        }

footer = sub {
        require ElegansSubs;
        print '
        <hr>
        <table width="100%">
        <TR>
        <TD align="LEFT" class="databody">
        For the source code for this browser, see the <a href="http://www.gmod.org">
        Generic Model Organism Database Project.</a>  For other questions, send
        mail to <a href="mailto:harris@cshl.org">Todd Harris &lt;harris@cshl.org&gt;</a>.
        </TD>
        </TR>
        </table>';
        ElegansSubs::ElegansSearchBar();
        print ElegansSubs::Footer();
        return;
        }

# list of tracks to turn on by default
default features = Genes Transcripts microsatellites

# The class of the objects used to establish the reference coordinates.
reference class  = Sequence

# examples to show in the introduction
examples = bma1.assembly.6851.0 Bm1_03720  bma1.gene.242217.0

search attributes = description Note auto_comment

# "automatic" classes to try when an unqualified identifier is given
automatic classes = Polypeptide CDS Sequence Gene

#image_padding = 60
pad_left   = 25
pad_right  = 25

# DAS reference server
das mapmaster = SELF

# Various places where you can insert your own HTML -- see configuration docs
html1 = 
html2 = 
html3 = 
html4 = 
html5 = 
html6 = 

# what image widths to offer
image widths  = 450 500 640 800 1024 1280

# default width of detailed view (pixels)
default width = 1024

# Web site configuration info
stylesheet  = /stylesheets/wormbase.css
buttons     = /gbrowse/images/buttons
tmpimages   = sub {
		my ($server) = $ENV{SERVER_NAME} =~ /(.*?)\..*/;
	  	$server    ||= 'local';
  		return "/ace_images/gbrowse/$server","/var/tmp/ace_images/gbrowse";
	}

# max and default segment sizes for detailed view
max segment     = 5000000
default segment = 5000

# zoom levels
zoom levels    = 100 200 1000 2000 5000 10000 20000 50000 100000 200000 5000000 1000000

# colors of the overview, detailed map and key
overview bgcolor = lightgrey
detailed bgcolor = lightgoldenrodyellow
key bgcolor      = beige

########################
# Default glyph settings
########################

[TRACK DEFAULTS]
glyph         = generic
height        = 10
bgcolor       = lightgrey
fgcolor       = black
font2color    = blue
label density = 100
bump density  = 500
# where to link to when user clicks in detailed view
link          = AUTO

################## TRACK CONFIGURATION ####################
# the remainder of the sections configure individual tracks
###########################################################
[Genes]
feature      = gene
glyph        = gene
category     = Genes
height       = 12
bgcolor      = sub {shift->strand < 1 ? 'steelblue' : '#9933FF' }
label        = 1
description  = sub {
	my $f = shift;
	my @subf = $f->get_SeqFeatures('mRNA');
	my ($note,$desc);
	for my $sf (@subf) {
	   ($note) = $sf->each_tag_value('auto_comment');
	   ($desc) = $sf->each_tag_value('description');
	}
	if ($note) {
	  $note =~ s/\W+/ /g;
 	}	
	$desc || $note;
  }
#label_transcripts =  1
das category = transcription
key          = Genes

[Genes:150000]
glyph        = generic
bump         = 0
maxdepth     = 1
stranded     = 1
label        = 0
description  = 0

[Transcripts:100000]
feature      = mRNA
glyph        = box
stranded     = 1

[Transcripts]
feature      = mRNA
category     = Genes
glyph        = cds
height       = 12
bgcolor      = lightsteelblue
ignore_empty_phase = 1
das category = transcription
key          = Transcripts

[TranslationF]
glyph        = translation
global feature = 1
height       = 20
fgcolor      = purple
start_codons = 0
strand       = +1
arrow_height = 2
translation  = 3frame
category     = Sequence
key          = 3-frame translation (forward)
citation     = This track shows the position of stop codons at low magnifications,
	and the 3-frame translation at high magnifications.  Only the forward strand
	is shown.

[DNA/GC Content]
glyph          = dna
global feature = 1
strand         = both
gc_window      = auto
height         = 40
fgcolor        = red
key            = Calculated GC Content
category       = Sequence

[TranslationR]
glyph        = translation
global feature = 1
height       = 20
fgcolor      = blue
strand       = -1
start_codons = 0
arrow_height = 2
translation  = 3frame
category     = Sequence
key          = 3-frame translation (reverse)
citation     = This track shows the position of stop codons at low magnifications,
	and the 3-frame translation at high magnifications.  Only the reverse
	strand is shown.


[MICRO]
feature      = microsatellite
bgcolor      = blue
height       = 8
description  = sub { shift->seq->seq }
key          = microsatellites
category     = Sequence


[GATC_rich]
feature     = GATC_rich_region
bgcolor     = green
height      = 8
key         = GATC-rich region
category    = Sequence
description = sub {
        my $f = shift;
        my ($type) = $f->each_tag_value('comment');
	$type
  }


[REPEAT]
feature     = repeat_region
bgcolor     = red
height      = 8
category    = Sequence
key         = repeats
description = sub {
        my $f = shift;
        my ($type) = $f->each_tag_value('repeat_family');
        "$type repeat family"
  }


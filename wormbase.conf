######################################################
#
#  WormBase Default Configuration
#
#  This file contains defaults for the WormBase
#  application.  This file should not be edited.
#
#     Configuration file precedence (lowest to highest)
#
#     $approot/wormbase.conf               // this file
#
#  You can over-ride the default settings in this file in:
#     $approot/wormbase_local.conf         // local defaults
#
#  Finally, you can provide your own local config file at
#     $approot/wormbase_[whatever].conf
#     shell> export WORMBASE_LOCAL_CONFIG_SUFFIX=[whatever]
#
#  For production servers, we dynamically select a configuration file
#  using this trick.
#     $approot/wormbase_[hostname].conf    // local defaults (for deployment)
#     $approot/wormbase_[developer].conf   // developer defaults

#
######################################################

###### Application name and type
name  = WormBase
site  = WormBase Rearchitecture

# Are we a mirror, master, or development site
site_type   = development
byline      = Catalyst Implementation

# ------------------
# Debugging
# debug = system-wide debugging; expects boolean
debug = 1
# debug_view: style of the view debugging. Off by default
#    unless "debug" is set above.
#   Options:
#     comment - send debugging statements as HTML comments
#     browser - send debugging statements in formatted divs
#     log     - send to the error log file
debug_view =



########################################################
#
#  FILE PATHS
#
########################################################

gbrowse_conf_dir = __path_to(conf)__/gbrowse.conf

########################################################
#
#  Database Locations and Authorization
#
#  By default, we use remote data sources for
#  convenience but expect this to be overriden
#  by the wormbase_local.conf.
#
########################################################
#<Model::AceDB>
#   # Which external class should be instantiated when the model is called?
#   #   class = WormBase::DBH::AceDB
#   # class = WormBase::DSN::AceDB
#   class = WormBase::API
#   <args>
#       acedb_host = aceserver.cshl.org
#       acedb_port = 2005
#       acedb_user =
#       acedb_pass =
#       cache_root = /usr/local/wormbase/website-2.0/cache
#       cache_expires = 3 weeks
#       cache_size    = 100000000
#       cache_auto_purge_interval =
#   </args>
#</Model::AceDB>

<Model::GFF>
   class = WormBase::DBH::GFF
   <args>
     mysql_host  = localhost
     mysql_user  = www-data
     mysql_pass  = 
     	<data_sources>
            <c_elegans>
		adaptor = dbi::mysqlace
		aggregator = processed_transcript{coding_exon,5_UTR,3_UTR/CDS}
		aggregator = full_transcript{coding_exon,five_prime_UTR,three_prime_UTR/Transcript}
		aggregator = transposon{coding_exon,five_prime_UTR,three_prime_UTR}
		aggregator = clone
		aggregator = alignment
		aggregator = waba_alignment
		aggregator = coding{coding_exon}
		aggregator = pseudo{exon:Pseudogene/Pseudogene}
		aggregator = rna{exon/Transcript}
	     </c_elegans>
	     <c_briggsae>
		adaptor    = dbi::mysqlace
		aggregator = wormbase_cds{coding_exon,three_prime_UTR,five_primer_UTR/CDS}
		aggregator = clone
		aggregator = alignment
		aggregator = waba_alignment
	     </c_briggsae>
	     <c_remanei>
		adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_remanei>
	     <c_elegans_pmap>
	        adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_elegans_pmap>
	     <c_elegans_gmap>
	        adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_elegans_gmap>
	</data_sources>
   </args>
</Model::GFF>


<Model::WormBaseAPI>
   class = WormBase::API
   <args>
       acedb_host = localhost
       acedb_port = 2005
       acedb_user =
       acedb_pass =
       cache_root = /usr/local/wormbase/website-2.0/cache
       cache_expires = 3 weeks
       cache_size    = 100000000
       cache_auto_purge_interval =

       mysql_host  = localhost
       mysql_user  = www-data
       mysql_pass  = 
     	<data_sources>
            <c_elegans>
		adaptor = dbi::mysqlace
		aggregator = processed_transcript{coding_exon,5_UTR,3_UTR/CDS}
		aggregator = full_transcript{coding_exon,five_prime_UTR,three_prime_UTR/Transcript}
		aggregator = transposon{coding_exon,five_prime_UTR,three_prime_UTR}
		aggregator = clone
		aggregator = alignment
		aggregator = waba_alignment
		aggregator = coding{coding_exon}
		aggregator = pseudo{exon:Pseudogene/Pseudogene}
		aggregator = rna{exon/Transcript}
	     </c_elegans>
	     <c_briggsae>
		adaptor    = dbi::mysqlace
		aggregator = wormbase_cds{coding_exon,three_prime_UTR,five_primer_UTR/CDS}
		aggregator = clone
		aggregator = alignment
		aggregator = waba_alignment
	     </c_briggsae>
	     <c_remanei>
		adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_remanei>
	     <c_elegans_pmap>
	        adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_elegans_pmap>
	     <c_elegans_gmap>
	        adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_elegans_gmap>
	</data_sources>
   </args>
</Model::WormBase>


######################################################
#
#  The following configuration stanzas cannot be
#   over-ridden by the local configuration.
#
######################################################

<Model::Anatomy_ontology>
   class = WormBase::Model::Anatomy_ontology
</Model::Anatomy_ontology>

<Model::Antibody>
   class = WormBase::Model::Antibody
</Model::Antibody>

<Model::Cluster>
   class = WormBase::Model::Cluster
</Model::Cluster>

<Model::Expression_cluster>
   class = WormBase::Model::Expression_cluster
</Model::Expression_cluster>

<Model::Gene>
   class = WormBase::API
#   class = WormBase::API::Object::Gene
   constructor = fetch
    # These are all view elements
#   <args>
#      image_tracks NG
#      image_tracks CG
#      image_tracks CANONICAL
#      image_tracks MOTIFS
#      image_tracks Allele
#      image_tracks RNAi
 #   </args>
</Model::Gene>

<Model::Gene_class>
   class = WormBase::Model::Gene_class
</Model::Gene_class>

<Model::Gene_ontology>
   class = WormBase::Model::Gene_ontology
</Model::Gene_ontology>

<Model::Gene_regulation>
   class = WormBase::Model::Gene_regulation
</Model::Gene_regulation>

<Model::Homology_group>
   class = WormBase::Model::Homology_group
</Model::Homology_group>

<Model::Laboratory>
   class = WormBase::Model::Laboratory
</Model::Laboratory>

<Model::Motif>
   class = WormBase::Model::Motif
</Model::Motif>

<Model::Operon>
   class = WormBase::Model::Operon
   <args>
      image_tracks = OP
      image_tracks = CG
   </args>
</Model::Operon>

<Model::Paper>
   class = WormBase::Model::Paper
</Model::Paper>

<Model::Phenotype_ontology>
   class = WormBase::Model::Phenotype_ontology
</Model::Phenotype_ontology>

<Model::Protein>
   class = WormBase::Model::Protein
   <args>
      <glyphs>
         low_complexity  = generic
         transmembrane   = generic
         signal_peptide  = generic
         tmhmm           = generic
      </glyphs>
      <labels>
         low_complexity  = Low Complexity
         transmembrane   = Transmembrane Domain(s)
         signal_peptide  = Signal Peptide(s)
         tmhmm           = Transmembrane Domain(s)
         wublastp_ensembl = BLASTP Hits on Human ENSEMBL database
         wublastp_fly    = BLASTP Hits on FlyBase database
         wublastp_slimSwissProt = BLASTP Hits on SwissProt
         wublastp_slimTrEmbl    = BLASTP Hits on Uniprot
         wublastp_worm          = BLASTP Hits on WormPep
      </labels>
      <colors>
         low_complexity = blue
         transmembrane  = green
         signalp        = gray
         Prosite        = cyan
         seg            = lightgrey
         Pfam           = wheat
         Motif_homol    = orange
         Pep_homol      = blue
      </colors>
   </args>
</Model::Protein>

<Model::Rearrangement>
   class = WormBase::Model::Rearrangement
</Model::Rearrangement>

<Model::Sequence>
   class = WormBase::Model::Sequence
</Model::Sequence>

<Model::Structure_data>
   class = WormBase::Model::Structure_data
   <args>
      similarity_display_cutoff = 75
   </args>
</Model::Structure_data>

<Model::Transgene>
   class = WormBase::Model::Transgene
</Model::Transgene>

<Model::Variation>
   class = WormBase::Model::Variation   
   <args>
      picture_width    = 500
# genomic span to display for alleles not mapped to genes
      unmapped_span    = 10000
      padding          = 10
      seq_style        = "font-size:12px;font-family:courier"
      display_all_tags = 1
      full_sequence_flank  = 250
      debug                = 0
      indel_display_limit  = 25
      snippet_length   = 60
      <motif_picture_glyphs>  
                  low_complexity = generic
                  transmembrane  = generic
                  signal_peptide = generic
                  tmhmm          = generic
      </motif_picture_glyphs>
      <motif_picture_labels>
                  low_complexity = Low Complexity
                  transmembrane  = Transmembrane Domain(s)
                  signal_peptide = Signal Peptide(s)
                  tmhmm          = Transmembrane Domain(s)
                  wublastp_ensembl = BLASTP Hits on Human ENSEMBL database
                  wublastp_fly     = BLASTP Hits on FlyBase database
                  wublastp_slimSwissProt = BLASTP Hits on SwissProt
                  wublastp_slimTrEmbl    = BLASTP Hits on TREMBL
                  wublastp_worm          = BLASTP Hits on WormPep
      </motif_picture_labels>
      <motif_picture_colors>
                  low_complexity = blue
                  transmembrane  = green
                  signalp        = gray
                  Prosite        = cyan
                  seg            = lightgrey
                  Pfam           = wheat
                  Motif_homol    = orange
                  Pep_homol      = blue
       </motif_picture_colors>
   </args>
</Model::Variation>




########################################################
# 
#  Pages, Widgets, and Fields
#
#  This section configures the available pages, widgets
#  and fields for the application.
#
########################################################
#<pages>
#	<gene>
#		<browse>
#			limits = Species
#			limits = Gene_class
#		</browse>
#		<search>
#			fields = name
# 			fields = common_name
#			fields = species
#			fields = description
#		</search>
#		<widgets>
#			<identification>
#x			





#wormbase2blast : 'http://localhost'
#blast2wormbase : 'http://localhost'

## Where to redirect AQL queries
#wormbase2aql   : 'http://localhost'
#aql2wormbase   : 'http://localhost'



#cacheroot   : /usr/local/wormbase/cache
#cacheexpires: '3 weeks'


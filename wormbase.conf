######################################################
#
#  WormBase Default Configuration
#
#  This file contains defaults for the WormBase
#  application.  This file should not be edited.
#
#     Configuration file precedence (lowest to highest)
#
#     $approot/wormbase.conf               // this file
#
#  You can over-ride the default settings in this file in:
#     $approot/wormbase_local.conf         // local defaults
#
#  Finally, you can provide your own local config file at
#     $approot/wormbase_[whatever].conf
#     shell> export WORMBASE_LOCAL_CONFIG_SUFFIX=[whatever]
#
#  For production servers, we dynamically select a configuration file
#  using this trick.
#     $approot/wormbase_[hostname].conf    // local defaults (for deployment)
#     $approot/wormbase_[developer].conf   // developer defaults

#
######################################################

###### Application name and type
site_name   = WormBase
site_byline = WormBase Redesign

# Are we a mirror, master, or development site
site_type   = development
byline      = Catalyst Implementation

# ------------------
# Debugging
# debug = system-wide debugging; expects boolean
debug = 1
# debug_view: style of the view debugging. Off by default
#    unless "debug" is set above.
#   Options:
#     comment - send debugging statements as HTML comments
#     browser - send debugging statements in formatted divs
#     log     - send to the error log file
debug_view =



########################################################
#
#  FILE PATHS
#
########################################################

gbrowse_conf_dir = __path_to(conf)__/gbrowse.conf




########################################################
#
#  API & REST configuration
#
########################################################
<api>
      content_type = json
      content_type = xml
      content_type = yml
      content_type = html
</api>


########################################################
#
#  Database Locations and Authorization
#
#  By default, we use remote data sources for
#  convenience but expect this to be overriden
#  by the wormbase_local.conf.
#
########################################################
#<Model::AceDB>
#   # Which external class should be instantiated when the model is called?
#   #   class = WormBase::DBH::AceDB
#   # class = WormBase::DSN::AceDB
#   class = WormBase::API
#   <args>
#       acedb_host = aceserver.cshl.org
#       acedb_port = 2005
#       acedb_user =
#       acedb_pass =
#       cache_root = /usr/local/wormbase/website-2.0/cache
#       cache_expires = 3 weeks
#       cache_size    = 100000000
#       cache_auto_purge_interval =
#   </args>
#</Model::AceDB>








# DEPRECATED?
<Model::GFF>
   class = WormBase::DBH::GFF
   <args>
     mysql_host  = localhost
     mysql_user  = www-data
     mysql_pass  = 
     	<data_sources>
            <c_elegans>
		adaptor = dbi::mysqlace
		aggregator = processed_transcript{coding_exon,5_UTR,3_UTR/CDS}
		aggregator = full_transcript{coding_exon,five_prime_UTR,three_prime_UTR/Transcript}
		aggregator = transposon{coding_exon,five_prime_UTR,three_prime_UTR}
		aggregator = clone
		aggregator = alignment
		aggregator = waba_alignment
		aggregator = coding{coding_exon}
		aggregator = pseudo{exon:Pseudogene/Pseudogene}
		aggregator = rna{exon/Transcript}
	     </c_elegans>
	     <c_briggsae>
		adaptor    = dbi::mysqlace
		aggregator = wormbase_cds{coding_exon,three_prime_UTR,five_primer_UTR/CDS}
		aggregator = clone
		aggregator = alignment
		aggregator = waba_alignment
	     </c_briggsae>
	     <c_remanei>
		adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_remanei>
	     <c_elegans_pmap>
	        adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_elegans_pmap>
	     <c_elegans_gmap>
	        adaptor    = dbi::mysqlace
		aggregator = wormbase_gene
	     </c_elegans_gmap>
	</data_sources>
   </args>
</Model::GFF>


<Model::WormBaseAPI>
  class = WormBase::API
  <args>
    conf_dir = __path_to(conf)__/
    <database>
	<acedb>
	# Acedb configuration
	reconnect = 5
	host = aceserver.cshl.edu
	port = 2005
	user =
	pass =
	cache_root = /usr/local/wormbase/website-2.0/cache
	cache_expires = 3 weeks
	cache_size    = 100000000
	cache_auto_purge_interval =
	</acedb>
	<gff>
	# MySQL configuration
	reconnect = 3
	host  = aceserver.cshl.edu
	user  = nobody
	pass  = 
	  <data_sources>
	      <c_elegans>
		  adaptor = dbi::mysqlace
		  aggregator = processed_transcript{coding_exon,5_UTR,3_UTR/CDS}
		  aggregator = full_transcript{coding_exon,five_prime_UTR,three_prime_UTR/Transcript}
		  aggregator = transposon{coding_exon,five_prime_UTR,three_prime_UTR}
		  aggregator = clone
		  aggregator = alignment
		  aggregator = waba_alignment
		  aggregator = coding{coding_exon}
		  aggregator = pseudo{exon:Pseudogene/Pseudogene}
		  aggregator = rna{exon/Transcript}
	      </c_elegans>
	      <c_briggsae>
		  adaptor    = dbi::mysqlace
		  aggregator = wormbase_cds{coding_exon,three_prime_UTR,five_primer_UTR/CDS}
		  aggregator = clone
		  aggregator = alignment
		  aggregator = waba_alignment
	      </c_briggsae>
	      <c_remanei>
		  adaptor    = dbi::mysqlace
		  aggregator = wormbase_gene
	      </c_remanei>
	      <c_elegans_pmap>
		  adaptor    = dbi::mysqlace
		  aggregator = wormbase_gene
	      </c_elegans_pmap>
	      <c_elegans_gmap>
		  adaptor    = dbi::mysqlace
		  aggregator = wormbase_gene
	      </c_elegans_gmap>
	  </data_sources>
	</gff>
      </database>
  </args>
</Model::WormBase>


######################################################
#
#  The following configuration stanzas cannot be
#   over-ridden by the local configuration.
#
######################################################

<Model::Anatomy_ontology>
   class = WormBase::Model::Anatomy_ontology
</Model::Anatomy_ontology>

<Model::Antibody>
   class = WormBase::Model::Antibody
</Model::Antibody>

<Model::Cluster>
   class = WormBase::Model::Cluster
</Model::Cluster>

<Model::Expression_cluster>
   class = WormBase::Model::Expression_cluster
</Model::Expression_cluster>

<Model::Gene>
   class = WormBase::API
#   class = WormBase::API::Object::Gene
   constructor = fetch
    # These are all view elements
#   <args>
#      image_tracks NG
#      image_tracks CG
#      image_tracks CANONICAL
#      image_tracks MOTIFS
#      image_tracks Allele
#      image_tracks RNAi
 #   </args>
</Model::Gene>

<Model::Gene_class>
   class = WormBase::Model::Gene_class
</Model::Gene_class>

<Model::Gene_ontology>
   class = WormBase::Model::Gene_ontology
</Model::Gene_ontology>

<Model::Gene_regulation>
   class = WormBase::Model::Gene_regulation
</Model::Gene_regulation>

<Model::Homology_group>
   class = WormBase::Model::Homology_group
</Model::Homology_group>

<Model::Laboratory>
   class = WormBase::Model::Laboratory
</Model::Laboratory>

<Model::Motif>
   class = WormBase::Model::Motif
</Model::Motif>

<Model::Operon>
   class = WormBase::Model::Operon
   <args>
      image_tracks = OP
      image_tracks = CG
   </args>
</Model::Operon>

<Model::Paper>
   class = WormBase::Model::Paper
</Model::Paper>

<Model::Phenotype_ontology>
   class = WormBase::Model::Phenotype_ontology
</Model::Phenotype_ontology>

<Model::Protein>
   class = WormBase::Model::Protein
   <args>
      <glyphs>
         low_complexity  = generic
         transmembrane   = generic
         signal_peptide  = generic
         tmhmm           = generic
      </glyphs>
      <labels>
         low_complexity  = Low Complexity
         transmembrane   = Transmembrane Domain(s)
         signal_peptide  = Signal Peptide(s)
         tmhmm           = Transmembrane Domain(s)
         wublastp_ensembl = BLASTP Hits on Human ENSEMBL database
         wublastp_fly    = BLASTP Hits on FlyBase database
         wublastp_slimSwissProt = BLASTP Hits on SwissProt
         wublastp_slimTrEmbl    = BLASTP Hits on Uniprot
         wublastp_worm          = BLASTP Hits on WormPep
      </labels>
      <colors>
         low_complexity = blue
         transmembrane  = green
         signalp        = gray
         Prosite        = cyan
         seg            = lightgrey
         Pfam           = wheat
         Motif_homol    = orange
         Pep_homol      = blue
      </colors>
   </args>
</Model::Protein>

<Model::Rearrangement>
   class = WormBase::Model::Rearrangement
</Model::Rearrangement>

<Model::Sequence>
   class = WormBase::Model::Sequence
</Model::Sequence>

<Model::Structure_data>
   class = WormBase::Model::Structure_data
   <args>
      similarity_display_cutoff = 75
   </args>
</Model::Structure_data>

<Model::Transgene>
   class = WormBase::Model::Transgene
</Model::Transgene>

<Model::Variation>
   class = WormBase::Model::Variation   
   <args>
      picture_width    = 500
# genomic span to display for alleles not mapped to genes
      unmapped_span    = 10000
      padding          = 10
      seq_style        = "font-size:12px;font-family:courier"
      display_all_tags = 1
      full_sequence_flank  = 250
      debug                = 0
      indel_display_limit  = 25
      snippet_length   = 60
      <motif_picture_glyphs>  
                  low_complexity = generic
                  transmembrane  = generic
                  signal_peptide = generic
                  tmhmm          = generic
      </motif_picture_glyphs>
      <motif_picture_labels>
                  low_complexity = Low Complexity
                  transmembrane  = Transmembrane Domain(s)
                  signal_peptide = Signal Peptide(s)
                  tmhmm          = Transmembrane Domain(s)
                  wublastp_ensembl = BLASTP Hits on Human ENSEMBL database
                  wublastp_fly     = BLASTP Hits on FlyBase database
                  wublastp_slimSwissProt = BLASTP Hits on SwissProt
                  wublastp_slimTrEmbl    = BLASTP Hits on TREMBL
                  wublastp_worm          = BLASTP Hits on WormPep
      </motif_picture_labels>
      <motif_picture_colors>
                  low_complexity = blue
                  transmembrane  = green
                  signalp        = gray
                  Prosite        = cyan
                  seg            = lightgrey
                  Pfam           = wheat
                  Motif_homol    = orange
                  Pep_homol      = blue
       </motif_picture_colors>
   </args>
</Model::Variation>




########################################################
# 
#  Pages, Widgets, and Fields
#
#  This section configures the available pages, widgets
#  and fields for the application.
#
#  This is a bit of a misnomer - consider page roughly
#  equivalent to class.  Actual pages are able to display
#  widgets from any class they wish.
#
#  General structure:
#
#  <page>
#      <page_name>
#         <widget>
#              field   // array of fields
#        </widget>
#      </page_name>
#  </page>      
#
###########################################################

# Generic widgets:
# Every page SHOULD have an "Identification" widget consisting of name and common name.
# These auto-methods can be over-ridden in your model.

# REMEMBER: If you change the name of anything here, you will also need to 
# change the name of the corresponding method in the Model class and the
# name of the template

# Some default fields for the identification widget
# Perhaps I should include species in here, too.
# OTOH, there are classes which may not have species
#my @identification_widget_fields = qw/
#				       name
#				       common_name
#				     /;
#
#				gene_regulation => {
#						    widgets      => { identification => [@identification_widget_fields,
#											 qw/summary
#											   /],
#								      method         => [qw/antibody
#											    reporter_gene
#											    in_situ_hybridization
#											    northern
#											    western
#											    RT_PCR
#											    other_method/],
#								      regulator      => [qw/genes
#											    cis_regulator
#											    allele_used
#											    rnai_used
#											    condition
#											   /],
#								      regulates      => [qw//],
#								      references      => \@reference_widget_fields,
#								      notes    => [ qw/remarks/],
#								    },
#						   },
#				homology_group => {
#						   widgets      => { identification => [@identification_widget_fields,
#											qw/title
#											   group_type/],
#								     cog_code_information => [qw/cog_type
#												 cog_code
#												 general_code_expansion
#												 specific_cog_expansion/],
#								     proteins            => [qw//],
#								   },
#						   
#						  },
#				laboratory => {
#						widgets => {identification  => [@identification_widget_fields], 
#							    representatives => [qw/principal_investigator
#										   other_representatives
#										   lab_url/],
#							    responsible_for => [qw/responsible_for_genes
#										   responsible_for_alleles/],
#							    members         => [qw/registered_lab_members
#										   past_lab_members/],
#							    notes         => [qw/remarks/],
#							   },
#					      },	
#				
#				motif => {
#					   widgets      => { identification => [@identification_widget_fields,
#										qw/title 
#										   remarks
#										   source_database
#										   accession_number
#										   associated_transposon_family
#										   match_sequence
#										   num_mismatch
#										  /],
#							     homology => [qw/dna_homology
#									     peptide_homology
#									     motif_homology
#									     homol_homology/],
#							     associations => [qw/gene_ontology/],
#							   },
#					 },
#				operon => {
#					   widgets      => { identification => [@identification_widget_fields,
#										qw/species/
#									       ],
#							     operon_structure => [qw/contains_genes/],
#							     location   => [qw/genomic_position
#									       genomic_environs/],
#							     history    => [qw/object_history/],
#							     references => \@reference_widget_fields,
#							   }
#					  },
#				
#				paper         => {
#						   widgets => {
#							       identification => [@identification_widget_fields,
#										 qw/PMID
#										   CGC/],
#							       citation       => [qw/authors
#										     journal
#										     year
#										     pages/],
#							       asbtract        => [qw//],
#							       author_locations => [qw//],
#							      },
#						 },
#				protein => {
#					     widgets => { identification => [@identification_widget_fields,
#									     qw/species
#										homology_groups
#										genes
#										transcripts
#										type
#										reactome_knowledgebase/],
#							  homology => [qw/homology_image
#									  motif_homologies
#									  best_blastp_matches/],
#							  sequence => [qw/protein_sequence/],
#							  protein_statistics => [qw/protein_length
#										    estimated_molecular_weight
#										    estimated_isoelectric_point
#										    amino_acid_composition
#										   /],
#							  history => [qw/protein_history/],
#							  
#							},
#					   },
#				rearrangement => {
#						   widgets => { identification => [@identification_widget_fields,
#										   qw/other_name
#										      variation/],
#								isolation => [qw/author
#										 location
#										 date
#										 mutagen
#										/],
#								type      => [qw/rearrangement_type
#										 duplication
#										 compound
#										 phenotype
#										/],
#								
#								balances => [qw/chromosome
#										relative_position
#										loci/],
#								
#								map => [qw/experimental_position/],
#								evidence => [qw/rearrangement_evidence/],
#								notes => [qw/remarks/],
#								positive_markers => [qw/genes_inside
#											loci_inside
#											clones_inside
#											rearrangements_inside/],
#								negative_markers => [qw/genes_outside
#											loci_outside
#											clones_outside
#											rearrangements_outside/],
#								display => [qw/hides_under
#									       hides/],
#								strain => [qw/reference_strain
#									      stains_carrying/],
#								mapping_data => [qw//],
#								references => \@reference_widget_fields,
#							      },
#						 },
#				structure_data => {
#						   widgets      => { identification => [@identification_widget_fields,
#											qw/database
#											   target_id
#											  /],
#								     target_details => [qw/sequence
#											   status/],
#								     homology       => [],
#								   },
#						  },
#				
#				# Fields for transgene aren't correctly separated into widgets
#				transgene => {
#					      widgets      => { driven_by => [ qw/driven_by_gene/],
#										  summary
#										  driven_by_sequence
#										  reporter_product
#										  author
#										  clone
#										  fragment
#										  injected_into_cgc_strain
#										  injected_into
#										  integrated_by
#										  location
#										  two_point
#										  multi_point
#										  strain
#                                                                                  phenotype
#										  rescue
#										  expression_pattern
#										  species  
#
#										  /],
#								location => [qw/
#										 map_position
#										 /],
#								location => [qw/
#										 genetic_position
#										 /],
#								references => \@reference_widget_fields,
#								notes      => [qw/remarks/],
#							      },
#					     },
#				
#				variation => {
#					 widgets => {
#						     identification => [@identification_widget_fields,
#									qw/other_name
#									   variation_type
#									  /],
#						     molecular_details => [qw/type_of_mutation
#									      nucleotide_change      
#									      flanking_sequences
#									      cgh_flanking_sequences
#									      cgh_deleted_probes
#									      context
#									      deletion_verification
#									      affects
#									      flanking_pcr_products
#									     /],
#						     location => [ qw/genetic_position
#								      genomic_position
#								      genomic_environs
#								     /],
#						     genetic_information => [qw/
#										 corresponding_gene
#										 reference_allele
#										 alleles
#										 polymorphisms
#										 strains
#										 rescued_by_transgene/],
#						     polymorphism_details => [qw/polymoprhism_type
#										 status
#										 polymorphism_assay
#										/],
#						     # NEED TO TEMPLATIZE TO THIS POINT (phenotype remark)
#						     phenotype => [qw/
#								       phenotypes_observed
#								       phenotypes_not_observed
#								       phenotype_remark
#								     /],
#						     # TODO: lab of origin. that's it.
#						     isolation_history   => [qw/source_database
#										author
#										person
#										laboratory_of_origin
#										date_isolated
#										mutagen
#										isolated_via_forward_genetics
#										isolated_via_reverse_genetics
#										transposon_excision
#										transposon_insertion
#									       /],
#						     references => \@reference_widget_fields,
#						     notes    => [ qw/remarks/ ],
#						    }
#					     }
#			       };


<pages>
	<antibody>
		<browse>
			limits = Species
			limits = Gene_class
		</browse>
		<search>
			fields = name
 			fields = common_name
			fields = species
			fields = description
		</search>
		<widgets>
# This is an array of widgets
# But sometimes I need to access
# widgets by name as a hash...
# Perhaps I should resurrect 
# the widget_order
			  <widget>
			      name overview
			      fields name
			      fields common_name
			      fields other_namt
			      fields summary
			      fields location
			      fields generated_against_locus
			      fields corresponding_gene
	  		      fields clonality
			      fields antigen
			      fields animal
			 </widget>
			 <widget>
			      name expression
			      fields expression_patterns
			 </widget>
			 <widget>
			      name notes
			      fields remarks
			 </widget>
	             	 <widget>
			      name references
			      fields published_literature
     			      fields meeting_abstracts
     			      fields gazette_abstracts
     			      fields wormbook_abstracts
 		     	 </widget>
		</widgets>
	</antibody>
	
	# The Expression Cluster
	<expression_cluster>
		<browse>
			limits = Species
			limits = Gene_class
		</browse>
		<search>
			fields = name
 			fields = common_name
			fields = species
			fields = description
		</search>
		<widgets>
			<widget>
				name identification
				fields name
				fields common_name
				fields description
				fields algorithm
			</widget>
			<widget>
			        name clustered_data
				fields microarray_results
				fields sage_results
			</widget>
	       	 	<widget>
			      name references
			      fields published_literature
     			      fields meeting_abstracts
     			      fields gazette_abstracts
     			      fields wormbook_abstracts
 		     	</widget>
		</widgets>
	</expression_cluster>
			
	# The Gene Summary Page
	<gene>
		<browse>
			limits = Species
			limits = Gene_class
		</browse>
		<search>
			fields = name
 			fields = common_name
			fields = species
			fields = description
		</search>
 	        # Widget order is important!
		<widgets>
			<widget>
			     name overview
			     title Overview
			     tooltip This would be the tooltip. Perhaps this belongs in the data struct.
			     fields taxonomy
			     fields ids
			     fields concise_description
			     fields common_name
			     fields gene_models
			     fields history
                 	 </widget>
		 	 <widget>
			     name sequences
			     title Sequences
			     fields spliced
			     fields unspliced
			     fields translated
	          	 </widget>
                  	 <widget>
			     name location
			     fields experimental_genetic_position
			     fields interpolated_genetic_position
			     fields genomic_position
			     fields genomic_environs
	          	 </widget>
		  	 <widget>
		     	     name expression			     
			     fields fourd_expression_movies
			     fields anatomic_expression_patterns
	          	 </widget>
 			 <widget>
			     name function
                             fields pre_wormbase_information
			     fields rnai_phenotypes
			     fields y1h_and_y2h_interactions
			     fields interactions
			     fields microarray_expression_data
			     fields expression_cluster
			     fields microarray_topology_map_position
			     fields regulation_on_expression_level
			     fields protein_domains
		   	 </widget>
	           	 <widget>
			     name gene_ontology
			     fields gene_ontology
	           	 </widget>
		   	 <widget>
			     name genetics
			     fields reference_allele
			     fields alleles
			     fields polymorphisms
			     fields strains
			     fields rearrangements
	 	    	 </widget>
		    	 <widget>
			     name homology
			     fields inparanoid_groups
			     fields orthologs
			     fields treefam
	            	 </widget>
		    	 <widget>
			     name similarities
			     fields best_blastp_matches
	            	 </widget>
	 		 <widget>
			     name reagents
			     fields transgenes
			     fields orfeome_project_primers
			     fields sage_tags
			     fields primer_pairs
			     fields microarray_probes
			     fields matching_cdnas
			     fields antibodies
	             	 </widget>
	             	 <widget>
			      name references
			      fields published_literature
     			      fields meeting_abstracts
     			      fields gazette_abstracts
     			      fields wormbook_abstracts
 		     	 </widget>
		</widgets>
	 </gene>
	 
	 # The Gene Class page
	 <gene_class>
		<browse>
			limits = Species
			limits = Gene_class
		</browse>
		<search>
			fields = name
 			fields = common_name
			fields = species
			fields = description
		</search>
		<widgets>
			<widget>
			     name identification
			     title Identification
			     tooltip This would be the tooltip. Perhaps this belongs in the data struct.
			     fields name
			     fields common_name
			     fields gene_class
			     fields main_name
			     fields other_name
			     fields description
			     fields phenotype
			     fields designating_laboratory
                 	 </widget>
			 <widget>
			     name genes
			     fields genes
			 </widget>
 			 <widget>
			     name notes
			     fields remarks
			 </widget>
			 <widget>
			     name previous_genes
			     fields previous_genes
			 </widget>
		</widgets>
	</gene_class>

	# The Variation Summary page
	<variation>
		<browse>
			limits = Species
			limits = Gene_class
		</browse>
		<search>
			fields = name
 			fields = common_name
			fields = species
			fields = description
		</search>
 	        # Widget order is important!
		<widgets>
			<widget>
			     name overview
			     title Overview
			     tooltip This would be the tooltip. Perhaps this belongs in the data struct.
			     fields name
			     fields common_name
			     fields cgc_name
			     fields other_names
			     fields taxonomy
			     fields variation_type
			     fields remarks
                 	 </widget>
		 	 <widget>
			     name molecular_details
			     title Molecular Details
			     fields type_of_mutation
			     fields nucleotide_change
			     fields flanking_sequences
			     fields cgh_deleted_probes
			     fields context
			     fields deletion_verification
			     fields features_affected
			     fields flanking_pcr_products
#			     fields motif_picture
	          	 </widget>
			 <widget>
			      name location
			      title Location
			      fields genomic_position
			      fields genetic_position
			      fields genomic_image
			 </widget>
	             	 <widget>
			      name references
			      fields published_literature
     			      fields meeting_abstracts
     			      fields gazette_abstracts
     			      fields wormbook_abstracts
 		     	 </widget>
		</widgets>
	 </variation>






</pages>






# Choosing which template to render:
# 1. Common: Is the field/widget listed in the common_* hash? Use it.
# 2. Custom: Is the field/widget listed in the custom_* hash? Use it.
# 3. Fall back to generic field/widget

# BETTER YET:
# 1. Does a common template exist for this field? Use it.
# 2. Does a custom template exist for this field? Use it.
# 3. Otherwise, use a generic template.

# common_fields are used throughout the model and do not
# belong to a specific class but still require custom templates.
# If your model requires one of these fields, all you need to do
# is specify it in your configuration.
#							    common_name
<common_fields>
	alleles = 1
        genetic_position = 1
	genomic_position = 1
        genomic_environs = 1
        history = 1
	interpolated_position = 1
        name = 1
	phenotypes_observed = 1
	phenotypes_not_observed = 1
	polymorphisms = 1
	references = 1
	strains = 1
	species = 1
        taxonomy = 1
</common_fields>


# These fields are handled by generic templates in root/templates/generic/
# This is a kludge until I debug the RenderView problem
# (to circumvent RenderView, I have to specify template and specifically forward to the view)


# generic_fields can use field.tt2 or widget.tt2
# They should be singletons (either string or object hashref),
# simple lists of either plain text or objects, or lists of lists
# that will become a table.
<generic_fields>
      author
      allele_used
      antibodies
      cis_regulator
      condition
      corresponding_gene
      flanking_pcr_products
      in_situ_hybridization
      isolated_via_forward_genetics
      isolated_via_reverse_genetics
      microarray_expression_data
      mutagen
      northern
      other_method
      person
      polymorphism_type
      reference_allele
      reporter_gene
      rescued_by_transgene
      rnai_used
      rt_pcr
      sage_tags
      status
      summary
      transgenes
      transposon_excision
      transposon_insertion
      type_of_mutation
      variation_type
      western							      
      matching_cdnas
      orfeome_project_primers
</generic_fields>
  







#wormbase2blast : 'http://localhost'
#blast2wormbase : 'http://localhost'

## Where to redirect AQL queries
#wormbase2aql   : 'http://localhost'
#aql2wormbase   : 'http://localhost'



#cacheroot   : /usr/local/wormbase/cache
#cacheexpires: '3 weeks'


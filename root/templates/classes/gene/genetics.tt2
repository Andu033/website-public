[%

   # Reference allele
   WRAPPER $field_block title="Reference allele" key="reference_allele";
       FOREACH obj IN fields.reference_allele.data;
	   tag2link(obj);
       END;
   END;

       
   # Alleles
   WRAPPER $field_block title="Alleles" key="alleles";
       build_data_table(order=['variation','sequence_known','molecular_change','affects'],
                        columns={ variation         => 'Allele',
	  	                  molecular_change  => 'Molecular<br /> change',
			          affects           => 'Protein<br /> effect',
			          sequence_known    => 'Sequence<br /> known?',
                               },
                         key='alleles');
   END;

   # Polymorphisms
   WRAPPER $field_block title="Polymorphisms & Natural variants" key="polymorphisms";
        build_data_table(order=['variation','type','sequence_known','molecular_change','affects'],
                         columns={ variation         => 'Polymorphism',
	   	                   type              => 'Type',
		                   molecular_change  => 'Molecular<br /> change',
			           affects           => 'Location',
			           sequence_known    => 'Sequence<br /> known?',
                                 },
                         key='polymorphisms');
    END;

   # Strains
   WRAPPER $field_block title="Strains" key="strains";

     venn("Carrying " _ tag2link(object.name.data) _ " alone", 
                                         fields.strains.data.carrying_gene_alone,
    	    "Available from the CGC",    fields.strains.data.available_from_cgc,
    	    "",                          fields.strains.data.carrying_gene_alone_and_cgc,
    	    "Other strains",             fields.strains.data.others);

    '<br />';

    rows = [];
    FOREACH type IN fields.strains.data.keys.sort;
      cgc = (( type == 'available_from_cgc') || (type == 'carrying_gene_alone_and_cgc')) ? 1 : 0;
      FOREACH strain IN fields.strains.data.$type;
      rows.push( { strain  = tag2link(strain),
                  genotype        = strain.genotype,
                  cgc        = cgc ? external_link('cgc', 'yes', strain.id) : 'no',
                } );
      END;
    END;

       build_data_table(order=['strain','genotype','cgc'],
                         columns={ strain    => 'Strain',
	        	              cgc       => 'Available<br /> from CGC?',
		                  genotype  => 'Genotype',
                                 },
                         passed_data=rows);
   END;

%]
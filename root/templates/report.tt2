[%- # This is the generic WormBase Report page             -%]
[%- # Stash contents should contain:                       -%]
[%- #    current_object - the object being displayed       -%]
[%- #    widgets - a list of widgets supported by the page -%]
[%- #    title   - the title of the page                   -%]

[% SET this_object_id    = object.name.data.id %]
[% SET this_object_label = object.common_name.data.label %]

[%# Available views, but we don't want classic page viewers to
    be able to select the new pages (yet) %]

[% UNLESS is_classic %]
<nav id="available-views">
   View as:
   [% # HARD-CODED! %]   
   [% SET my_url = join("/","reports",class,$object.this_object_id,'/?view=') %]
   <a href="/reports/[%- class _ '/' _ this_object_id -%]/?view=tabs">tabs</a> |
   <a href="/reports/[%- class _ '/' _ this_object_id -%]/?view=paned">paned</a> |
   <a href="/reports/[%- class _ '/' _ this_object_id -%]/?view=page">full page</a> |
   [% tag2link(object.name.data,'classic','is_classic') %]
</nav>
[% END %]

[% IF is_classic %]
     [% PROCESS "nav/classic_contextual_navbar.tt2" %]
[% END %]

<div class="title">
   [% title %]
   [%- IF object -%]
     <h2>[% class FILTER ucfirst %] Report: [%- object.common_name.data.label -%]</h2>
   [% END %] 
</div>

[%# Add in the prompt %]
[% IF is_classic %]
     [% PROCESS nav/classic_prompt.tt2(object.name.data.class) %]
     [% PROCESS "nav/classic_report_toc.tt2" %]
[% END %]


[%# A two panel selector view.
     The sidebar contains panels
    A paned view with a sidebar TOC and content displayed in the main pane onClick %]

[% IF view=="paned" %]

   <div id="sidebar">
        <ul class="">
             [% FOREACH widget IN widgets -%]
              <!-- The REST URI is: [% c.uri_for('/rest','widget',this_page,random_object,widget) %]" -->
                    <li>
                        <a class="ajax content-pane" href="[% c.uri_for('/rest','widget',class,this_object_id,widget.name) %]">
                           <span>[% widget.title FILTER ucfirst %]</span>
                        </a>
                   </li>
             [% END %]
         </ul>
    </div>

      <div id="content-pane"></div>
                     <script>
                            $("#content-pane").load("[% c.uri_for('/rest','widget',this_page,this_object_id,widget.name) %]",
	                           function(response, status, xhr) {
                                            if (status == "error") {
                                                var msg = "Sorry but there was an error: ";
                                                $("#error").html(msg + xhr.status + " " + xhr.statusText);
                                            } 
                                     });
                            </script>


[% # Tabbed View, loaded onClick; this is also the default view %]
[% ELSIF view=="tabs" || (view == "" && !is_classic) %]

   <div id="tabs">
      <div class="ui-tabs">
          <ul class="ui-tabs-nav">
             [% FOREACH widget IN widgets -%]
                <li>
                      <a href="/rest/widget/[% class %]/[% this_object_id %]/[% widget.name %]">
                           <span>[% widget.title %]</span>
                      </a>
                </li>
    	     [% END %]
          </ul>
       </div>
   </div>



[%# All widgets on one page, loaded by ajax. This is esentially 
    what the current site is, less the ajax loading %]

[% ELSIF view=="page" OR is_classic %]

    [%# Set up the nested tables of the classic view %]
    [% IF is_classic %]
         <table border="1" width="100%">
    [% END %]

     [% FOREACH this_page IN c.config.pages.keys.sort %]

         [% # Wow. Stupid hack since pages are a hash not array %]
         [% NEXT IF this_page != class %]

         [% FOREACH widget IN c.config.pages.$this_page.widgets.widget %]

                    [% WRAPPER "boilerplate/widget" -%]
                          [%#- This is a little goofy. Let me explain.
                               What we are doing here is preparing the widget
                               and markup as a target for an ajax request.
                               This lets us display widget headers above
                               containers which are then filled by ajax.
			       
			       For the classic view, this includes building 
			       a nested table structure.

                               Although we could place the WRAPPER in each widget
                               template proper, widget headers are then displayed
                               once the content has returned.

			       The upshot of this is that widgets are not self-contained.
			       I'm not entirely psyched about that. Something to ponder.
			       %]                               
                    [% END %]

		    [%# This is a work in progress: I want to sequentially load widgets.
		        Firefox does this using the existing code, but other browsers do not.			
			%] 
		   <!-- <div class="dynamic-widget"><a href="[% c.uri_for('/rest','widget',this_page,this_object_id,widget.name) %]">[% widget.name %]</a></div>-->

                    <script>
                             $("#[%- widget.name -%]").load("[% c.uri_for('/rest','widget',this_page,this_object_id,widget.name) %]",
   		                   function(response, status, xhr) {
                                          if (status == "error") {
                                             var msg = "Sorry but there was an error: ";
                                             $("#error").html(msg + xhr.status + " " + xhr.statusText);
                                           } 
                                    })				      
                   </script>


      [% END %]
  [% END %]


  [% IF is_classic %] [%# Need to close the table based layout. %]
          </table>
  [% END %]

[% END %]



